--- src/internal.c
+++ src/internal.c
@@ -4850,12 +4872,20 @@ int EccVerify(WOLFSSL* ssl, const byte* in, word32 inSz, const byte* out,
 #endif
 
 #ifdef HAVE_PK_CALLBACKS
+#if defined(WOLFSSL_MAXQ108x)
+    if (ssl->options.side == WOLFSSL_CLIENT_END) {
+        maxq10xx_SetupPkCallbacks(ssl->ctx);
+    }
+#endif
+
     if (ssl->ctx->EccVerifyCb) {
         void* ctx = wolfSSL_GetEccVerifyCtx(ssl);
         ret = ssl->ctx->EccVerifyCb(ssl, in, inSz, out, outSz, keyBuf, keySz,
             &ssl->eccVerifyRes, ctx);
     }
-    #if !defined(WOLFSSL_RENESAS_SCEPROTECT) && \
+    #if defined(HAVE_PK_CALLBACKS) && defined(WOLFSSL_MAXQ108x)
+    if ((ret == NOT_COMPILED_IN) || ssl->options.side != WOLFSSL_CLIENT_END)
+    #elif !defined(WOLFSSL_RENESAS_SCEPROTECT) && \
         !defined(WOLFSSL_RENESAS_TSIP_TLS)
     else
     #else
@@ -4972,6 +5002,12 @@ int EccMakeKey(WOLFSSL* ssl, ecc_key* key, ecc_key* peer)
     }
 
 #ifdef HAVE_PK_CALLBACKS
+#ifdef WOLFSSL_MAXQ108x
+    if (ssl->options.side == WOLFSSL_CLIENT_END)
+    {
+        maxq10xx_SetupPkCallbacks(ssl->ctx);
+    }
+#endif
     if (ssl->ctx->EccKeyGenCb) {
         void* ctx = wolfSSL_GetEccKeyGenCtx(ssl);
         ret = ssl->ctx->EccKeyGenCb(ssl, key, keySz, ecc_curve, ctx);
